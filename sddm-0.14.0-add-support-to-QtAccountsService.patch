diff -Naur sddm-0.15.0/CMakeLists.txt sddm-0.15.0.tpg/CMakeLists.txt
--- sddm-0.15.0/CMakeLists.txt	2017-08-31 10:54:30.000000000 +0000
+++ sddm-0.15.0.tpg/CMakeLists.txt	2017-09-07 21:19:18.376452222 +0000
@@ -91,6 +91,20 @@
 # Qt 5
 find_package(Qt5 5.6.0 CONFIG REQUIRED Core DBus Gui Qml Quick LinguistTools)
 
+# AccountsService Qt5 binding
+find_package(QtAccountsService)
+set_package_properties(QtAccountsService PROPERTIES 
+    DESCRIPTION "Qt-style API to use freedesktop.org's AccountsService DBus service"
+    URL "https://github.com/hawaii-desktop/qtaccountsservice"
+    TYPE OPTIONAL
+    PURPOSE "Use AccountsService's iconFileName"
+)
+set(HAVE_QTACCOUNTSSERVICE FALSE)
+if (QtAccountsService_FOUND)
+    add_definitions(-DHAVE_QTACCOUNTSSERVICE)
+    set(HAVE_QTACCOUNTSSERVICE TRUE)
+endif()
+
 # find qt5 imports dir
 get_target_property(QMAKE_EXECUTABLE Qt5::qmake LOCATION)
 if(NOT QT_IMPORTS_DIR)
diff -Naur sddm-0.15.0/src/greeter/CMakeLists.txt sddm-0.15.0.tpg/src/greeter/CMakeLists.txt
--- sddm-0.15.0/src/greeter/CMakeLists.txt	2017-08-30 14:23:25.000000000 +0000
+++ sddm-0.15.0.tpg/src/greeter/CMakeLists.txt	2017-09-07 21:20:11.673454253 +0000
@@ -4,6 +4,8 @@
     "${LIBXCB_INCLUDE_DIR}"
 )
 
+include_directories(${QtAccountsService_INCLUDE_DIRS})
+
 set(GREETER_SOURCES
     ${CMAKE_SOURCE_DIR}/src/common/Configuration.cpp
     ${CMAKE_SOURCE_DIR}/src/common/ConfigReader.cpp
@@ -30,12 +32,17 @@
 target_link_libraries(sddm-greeter
                       Qt5::Quick
                       ${LIBXCB_LIBRARIES}
-                      ${LIBXKB_LIBRARIES})
+                      ${LIBXKB_LIBRARIES}
+                      ${QtAccountsService_LIBRARIES})
 
 if(JOURNALD_FOUND)
     target_link_libraries(sddm-greeter ${JOURNALD_LIBRARIES})
 endif()
 
+if(HAVE_QTACCOUNTSSERVICE)
+    target_link_libraries(sddm-greeter QtAccountsService::QtAccountsService)
+endif()
+
 # Translations
 add_dependencies(sddm-greeter components-translation)
 add_dependencies(sddm-greeter themes-translation)
diff -Naur sddm-0.15.0/src/greeter/UserModel.cpp sddm-0.15.0.tpg/src/greeter/UserModel.cpp
--- sddm-0.15.0/src/greeter/UserModel.cpp	2017-08-30 14:23:25.000000000 +0000
+++ sddm-0.15.0.tpg/src/greeter/UserModel.cpp	2017-09-07 21:19:18.376452222 +0000
@@ -1,5 +1,7 @@
 /***************************************************************************
 * Copyright (c) 2013 Abdurrahman AVCI <abdurrahmanavci@gmail.com>
+* Copyright (c) 2015 Leslie Zhai <xiang.zhai@i-soft.com.cn>
+* Copyright (c) 2015 Mingye Wang (Arthur2e5) <arthur200126@gmail.com>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
@@ -54,6 +56,9 @@
         const QString facesDir = mainConfig.Theme.FacesDir.get();
         const QString defaultFace = QStringLiteral("file://%1/.face.icon").arg(facesDir);
 
+#if HAVE_QTACCOUNTSSERVICE
+        asAccountsManager = new QtAccountsService::AccountsManager();
+#endif
         struct passwd *current_pw;
         while ((current_pw = getpwent()) != nullptr) {
 
@@ -92,6 +97,18 @@
 
             // search for face icon
             user->icon = defaultFace;
+            QString userFace = QStringLiteral("%1/.face.icon").arg(user->homeDir);
+            QString systemFace = QStringLiteral("%1/%2.face.icon").arg(mainConfig.Theme.FacesDir.get()).arg(user->name);
+            if (QFile::exists(userFace))
+                user->icon = userFace;
+#if HAVE_QTACCOUNTSSERVICE
+            else if (asUserAccount && QFile::exists(asUserAccount->iconFileName()))
+                user->icon = asUserAccount->iconFileName();    // accountservice user face
+#endif
+            else if (QFile::exists(systemFace))
+                user->icon = systemFace;
+            else
+                user->icon = QStringLiteral("%1/default.face.icon").arg(mainConfig.Theme.FacesDir.get());
 
             // add user
             d->users << user;
@@ -127,6 +144,13 @@
 
     UserModel::~UserModel() {
         delete d;
+
+#if HAVE_QTACCOUNTSSERVICE
+        if (asAccountsManager) {
+            delete asAccountsManager;
+            asAccountsManager = nullptr;
+        }
+#endif
     }
 
     QHash<int, QByteArray> UserModel::roleNames() const {
diff -Naur sddm-0.15.0/src/greeter/UserModel.h sddm-0.15.0.tpg/src/greeter/UserModel.h
--- sddm-0.15.0/src/greeter/UserModel.h	2016-10-12 15:23:39.000000000 +0000
+++ sddm-0.15.0.tpg/src/greeter/UserModel.h	2017-09-07 21:19:18.376452222 +0000
@@ -1,5 +1,7 @@
 /***************************************************************************
 * Copyright (c) 2013 Abdurrahman AVCI <abdurrahmanavci@gmail.com>
+* Copyright (c) 2015 Leslie Zhai <xiang.zhai@i-soft.com.cn>
+* Copyright (c) 2015 Mingye Wang (Arthur2e5) <arthur200126@gmail.com>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
@@ -24,6 +26,10 @@
 
 #include <QHash>
 
+#if HAVE_QTACCOUNTSSERVICE
+#include <QtAccountsService/AccountsManager>  /* QtAccountsService */
+#endif
+
 namespace SDDM {
     class UserModelPrivate;
 
@@ -57,6 +63,9 @@
         int disableAvatarsThreshold() const;
     private:
         UserModelPrivate *d { nullptr };
+#if HAVE_QTACCOUNTSSERVICE
+        QtAccountsService::AccountsManager *asAccountsManager { nullptr };
+#endif
     };
 }
 
