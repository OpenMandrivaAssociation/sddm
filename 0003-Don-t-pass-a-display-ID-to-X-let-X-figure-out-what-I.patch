From 469ea132e847796a4f87e7f7a8f7e505c80f3071 Mon Sep 17 00:00:00 2001
From: David Edmundson <kde@davidedmundson.co.uk>
Date: Wed, 12 Nov 2014 17:23:01 +0100
Subject: [PATCH 03/24] Don't pass a display ID to X, let X figure out what ID
 to use

---
 src/daemon/Display.cpp           |  8 ++++----
 src/daemon/Display.h             |  5 ++---
 src/daemon/Seat.cpp              | 39 ++++++++-------------------------------
 src/daemon/Seat.h                |  5 ++---
 src/daemon/XorgDisplayServer.cpp | 18 ++++++------------
 src/daemon/XorgDisplayServer.h   |  2 --
 6 files changed, 22 insertions(+), 55 deletions(-)

diff --git a/src/daemon/Display.cpp b/src/daemon/Display.cpp
index 87d0cc3..1f6db53 100644
--- a/src/daemon/Display.cpp
+++ b/src/daemon/Display.cpp
@@ -40,8 +40,8 @@
 #include <unistd.h>
 
 namespace SDDM {
-    Display::Display(const int displayId, const int terminalId, Seat *parent) : QObject(parent),
-        m_displayId(displayId), m_terminalId(terminalId),
+    Display::Display(const int terminalId, Seat *parent) : QObject(parent),
+        m_terminalId(terminalId),
         m_auth(new Auth(this)),
         m_displayServer(new XorgDisplayServer(this)),
         m_seat(parent),
@@ -73,8 +73,8 @@ namespace SDDM {
         stop();
     }
 
-    const int Display::displayId() const {
-        return m_displayId;
+    QString Display::displayId() const {
+        return m_displayServer->display();
     }
 
     const int Display::terminalId() const {
diff --git a/src/daemon/Display.h b/src/daemon/Display.h
index 5475de0..fc1ce5b 100644
--- a/src/daemon/Display.h
+++ b/src/daemon/Display.h
@@ -39,10 +39,10 @@ namespace SDDM {
         Q_OBJECT
         Q_DISABLE_COPY(Display)
     public:
-        explicit Display(const int displayId, const int terminalId, Seat *parent);
+        explicit Display(int terminalId, Seat *parent);
         ~Display();
 
-        const int displayId() const;
+        QString displayId() const;
         const int terminalId() const;
 
         const QString &name() const;
@@ -71,7 +71,6 @@ namespace SDDM {
         bool m_relogin { true };
         bool m_started { false };
 
-        int m_displayId { 0 };
         int m_terminalId { 7 };
 
         QString m_passPhrase;
diff --git a/src/daemon/Seat.cpp b/src/daemon/Seat.cpp
index 066a931..915d619 100644
--- a/src/daemon/Seat.cpp
+++ b/src/daemon/Seat.cpp
@@ -51,36 +51,25 @@ namespace SDDM {
         return m_name;
     }
 
-    void Seat::createDisplay(int displayId, int terminalId) {
+    void Seat::createDisplay(int terminalId) {
         //reload config if needed
         mainConfig.load();
         
-        if (displayId == -1) {
-            // find unused display
-            displayId = findUnused(0, [&](const int number) {
-                bool alreadyExists = m_displayIds.contains(number);
-                if (!alreadyExists)
-                    alreadyExists = XorgDisplayServer::displayExists(number);
-                return alreadyExists;
-            });
-
-            // find unused terminal
+        if (terminalId == -1) {
+                // find unused terminal
             terminalId = findUnused(mainConfig.XDisplay.MinimumVT.get(), [&](const int number) {
                 return m_terminalIds.contains(number);
             });
         }
 
-        // mark display as used
-        m_displayIds << displayId;
-
         // mark terminal as used
         m_terminalIds << terminalId;
 
         // log message
-        qDebug() << "Adding new display" << displayId << "on vt" << terminalId << "...";
+        qDebug() << "Adding new display" << "on vt" << terminalId << "...";
 
         // create a new display
-        Display *display = new Display(displayId, terminalId, this);
+        Display *display = new Display(terminalId, this);
 
         // restart display on stop
         connect(display, SIGNAL(stopped()), this, SLOT(displayStopped()));
@@ -92,26 +81,14 @@ namespace SDDM {
         display->start();
     }
 
-    void Seat::removeDisplay(int displayId) {
-        qDebug() << "Removing display" << displayId << "...";
-
-        // display object
-        Display *display = nullptr;
-
-        // find display
-        for (Display *d: m_displays)
-            if (d->displayId() == displayId)
-                display = d;
+    void Seat::removeDisplay(Display* display) {
+        qDebug() << "Removing display" << display->displayId() << "...";
 
-        // check if found
-        if (display == nullptr)
-            return;
 
         // remove display from list
         m_displays.removeAll(display);
 
         // mark display and terminal ids as unused
-        m_displayIds.removeAll(display->displayId());
         m_terminalIds.removeAll(display->terminalId());
 
         // stop the display
@@ -127,7 +104,7 @@ namespace SDDM {
         Display *display = qobject_cast<Display *>(sender());
 
         // remove display
-        removeDisplay(display->displayId());
+        removeDisplay(display);
 
         // restart otherwise
         if (m_displays.isEmpty())
diff --git a/src/daemon/Seat.h b/src/daemon/Seat.h
index 0c3f334..8efe476 100644
--- a/src/daemon/Seat.h
+++ b/src/daemon/Seat.h
@@ -34,8 +34,8 @@ namespace SDDM {
         const QString &name() const;
 
     public slots:
-        void createDisplay(int displayId = -1, int terminalId = -1);
-        void removeDisplay(int displayId);
+        void createDisplay(int terminalId = -1);
+        void removeDisplay(SDDM::Display* display);
 
     private slots:
         void displayStopped();
@@ -45,7 +45,6 @@ namespace SDDM {
 
         QList<Display *> m_displays;
         QList<int> m_terminalIds;
-        QList<int> m_displayIds;
     };
 }
 
diff --git a/src/daemon/XorgDisplayServer.cpp b/src/daemon/XorgDisplayServer.cpp
index ae4872d..6400228 100644
--- a/src/daemon/XorgDisplayServer.cpp
+++ b/src/daemon/XorgDisplayServer.cpp
@@ -28,6 +28,7 @@
 #include <QDebug>
 #include <QFile>
 #include <QProcess>
+#include <QUuid>
 
 #include <xcb/xcb.h>
 
@@ -36,9 +37,6 @@
 
 namespace SDDM {
     XorgDisplayServer::XorgDisplayServer(Display *parent) : DisplayServer(parent) {
-        // figure out the X11 display
-        m_display = QString(":%1").arg(displayPtr()->displayId());
-
         // get auth directory
         QString authDir = RUNTIME_DIR;
 
@@ -50,7 +48,7 @@ namespace SDDM {
         QDir().mkpath(authDir);
 
         // set auth path
-        m_authPath = QString("%1/%2").arg(authDir).arg(m_display);
+        m_authPath = QString("%1/%2").arg(authDir).arg(QUuid::createUuid().toString());
 
         // generate cookie
         std::random_device rd;
@@ -70,10 +68,6 @@ namespace SDDM {
         stop();
     }
 
-    bool XorgDisplayServer::displayExists(int number) {
-        return QFile(QString("/tmp/.X%1-lock").arg(number)).exists();
-    }
-
     const QString &XorgDisplayServer::display() const {
         return m_display;
     }
@@ -151,7 +145,6 @@ namespace SDDM {
         } else {
             // set process environment
             QProcessEnvironment env = QProcessEnvironment::systemEnvironment();
-            env.insert("XAUTHORITY", m_authPath);
             env.insert("XCURSOR_THEME", mainConfig.Theme.CursorTheme.get());
             process->setProcessEnvironment(env);
 
@@ -164,8 +157,7 @@ namespace SDDM {
 
             // start display server
             QStringList args;
-            args << m_display
-                 << "-auth" << m_authPath
+            args << "-auth" << m_authPath
                  << "-nolisten" << "tcp"
                  << "-background" << "none"
                  << "-noreset"
@@ -195,7 +187,9 @@ namespace SDDM {
                 return false;
             }
             QByteArray displayNumber = readPipe.readLine();
-
+            displayNumber.prepend(QByteArray(":"));
+            displayNumber.remove(displayNumber.size() -1, 1); //trim trailing whitespace
+            m_display= displayNumber;
     
             // close our pipe
             close(pipeFds[0]);
diff --git a/src/daemon/XorgDisplayServer.h b/src/daemon/XorgDisplayServer.h
index 45c777a..86fad2d 100644
--- a/src/daemon/XorgDisplayServer.h
+++ b/src/daemon/XorgDisplayServer.h
@@ -33,8 +33,6 @@ namespace SDDM {
         explicit XorgDisplayServer(Display *parent);
         ~XorgDisplayServer();
 
-        static bool displayExists(int number);
-
         const QString &display() const;
         const QString &authPath() const;
 
-- 
1.9.0

