From f0b6dec66a6fc8cc6e21da57f81190843b483f76 Mon Sep 17 00:00:00 2001
From: Pier Luigi Fiorini <pierluigi.fiorini@liri.io>
Date: Sun, 28 Feb 2021 12:07:33 +0100
Subject: [PATCH] Allocate VT for the display

Replace the old crude algorithm to find the next available VT with a
more reliable method using the VT_OPENQRY ioctl.

General.MinimumVT setting is now obsolete and it's no longer used.
---
 CMakeLists.txt             |  4 ----
 data/man/sddm.conf.rst.in  |  2 +-
 src/common/Configuration.h |  1 -
 src/common/Constants.h.in  |  1 -
 src/daemon/Display.cpp     |  7 +++++--
 src/daemon/Display.h       |  2 +-
 src/daemon/Seat.cpp        | 38 +++-----------------------------------
 src/daemon/Seat.h          |  3 +--
 8 files changed, 11 insertions(+), 47 deletions(-)

diff -Naur a/CMakeLists.txt b/CMakeLists.txt
--- a/CMakeLists.txt	2021-10-06 15:28:41.092851469 +0000
+++ b/CMakeLists.txt	2021-10-06 15:30:35.402329185 +0000
@@ -144,7 +144,6 @@
         string(REGEX REPLACE "[ \t\n]+" "" SYSTEMD_SYSTEM_UNIT_DIR ${SYSTEMD_SYSTEM_UNIT_DIR})
     endif()
 
-    set(MINIMUM_VT 1)
     set(HALT_COMMAND "/usr/bin/systemctl poweroff")
     set(REBOOT_COMMAND "/usr/bin/systemctl reboot")
 else()
@@ -162,7 +161,6 @@
     add_definitions(-DHAVE_ELOGIND)
     set(CMAKE_AUTOMOC_MOC_OPTIONS -DHAVE_ELOGIND)
 
-    set(MINIMUM_VT 7)
     set(HALT_COMMAND "/usr/bin/loginctl poweroff")
     set(REBOOT_COMMAND "/usr/bin/loginctl reboot")
 endif()
@@ -174,10 +172,8 @@
     # commands for shutdown and reboot. On FreeBSD, there are
     # normally more getty's running than on Linux.
     if("${CMAKE_SYSTEM_NAME}" STREQUAL "FreeBSD")
-        set(MINIMUM_VT 9)
         set(HALT_COMMAND "/sbin/shutdown -p now")
     else()
-        set(MINIMUM_VT 7)
         set(HALT_COMMAND "/sbin/shutdown -h -P now")
     endif()
     set(REBOOT_COMMAND "/sbin/shutdown -r now")
diff -Naur a/data/man/sddm.conf.rst.in b/data/man/sddm.conf.rst.in
--- a/data/man/sddm.conf.rst.in	2021-10-06 15:28:41.092851469 +0000
+++ b/data/man/sddm.conf.rst.in	2021-10-06 15:31:21.832117152 +0000
@@ -136,7 +136,7 @@
 	Minimum virtual terminal number that will be used
 	by the first display. Virtual terminal number will
 	increase as new displays added.
-	Default value is @MINIMUM_VT@.
+	This setting is no longer available since SDDM v0.20.
 
 `EnableHiDPI=`
 	Enables Qt's automatic HiDPI scaling.
diff -Naur a/src/common/Configuration.h b/src/common/Configuration.h
--- a/src/common/Configuration.h	2021-10-06 15:28:41.102851424 +0000
+++ b/src/common/Configuration.h	2021-10-06 15:31:47.861998303 +0000
@@ -68,7 +68,6 @@
 	    Entry(SessionLogFile,      QString,     _S(".local/share/sddm/xorg-session.log"),   _S("Path to the user session log file"));
             Entry(DisplayCommand,      QString,     _S(DATA_INSTALL_DIR "/scripts/Xsetup"),     _S("Path to a script to execute when starting the display server"));
             Entry(DisplayStopCommand,  QString,     _S(DATA_INSTALL_DIR "/scripts/Xstop"),      _S("Path to a script to execute when stopping the display server"));
-            Entry(MinimumVT,           int,         MINIMUM_VT,                                 _S("The lowest virtual terminal number that will be used."));
             Entry(EnableHiDPI,         bool,        false,                                      _S("Enable Qt's automatic high-DPI scaling"));
         );
 
diff -Naur a/src/common/Constants.h.in b/src/common/Constants.h.in
--- a/src/common/Constants.h.in	2020-11-02 10:03:22.000000000 +0000
+++ b/src/common/Constants.h.in	2021-10-06 15:32:08.031906221 +0000
@@ -37,7 +37,6 @@
 #define SYSTEM_CONFIG_DIR           "@SYSTEM_CONFIG_DIR@"
 
 #define LOG_FILE                    "@LOG_FILE@"
-#define MINIMUM_VT                  @MINIMUM_VT@
 
 #define UID_MIN                     @UID_MIN@
 #define UID_MAX                     @UID_MAX@
diff -Naur a/src/daemon/Display.cpp b/src/daemon/Display.cpp
--- a/src/daemon/Display.cpp	2021-10-06 15:28:41.162851149 +0000
+++ b/src/daemon/Display.cpp	2021-10-06 15:33:11.521616429 +0000
@@ -45,17 +45,19 @@
 
 #include "Login1Manager.h"
 #include "Login1Session.h"
-
+#include "VirtualTerminal.h"
 
 namespace SDDM {
-    Display::Display(const int terminalId, Seat *parent) : QObject(parent),
-        m_terminalId(terminalId),
+    Display::Display(Seat *parent) : QObject(parent),
         m_auth(new Auth(this)),
         m_displayServer(new XorgDisplayServer(this)),
         m_seat(parent),
         m_socketServer(new SocketServer(this)),
         m_greeter(new Greeter(this)) {
 
+        // Allocate vt
+        m_terminalId = VirtualTerminal::setUpNewVt();
+
         // respond to authentication requests
         m_auth->setVerbose(true);
         connect(m_auth, &Auth::requestChanged, this, &Display::slotRequestChanged);
diff -Naur a/src/daemon/Display.h b/src/daemon/Display.h
--- a/src/daemon/Display.h	2020-11-02 10:03:22.000000000 +0000
+++ b/src/daemon/Display.h	2021-10-06 15:33:45.291462323 +0000
@@ -41,7 +41,7 @@
         Q_OBJECT
         Q_DISABLE_COPY(Display)
     public:
-        explicit Display(int terminalId, Seat *parent);
+        explicit Display(Seat *parent);
         ~Display();
 
         QString displayId() const;
diff -Naur a/src/daemon/Seat.cpp b/src/daemon/Seat.cpp
--- a/src/daemon/Seat.cpp	2021-10-06 15:28:41.142851241 +0000
+++ b/src/daemon/Seat.cpp	2021-10-06 15:36:00.100847331 +0000
@@ -33,18 +33,6 @@
 #include <functional>
 
 namespace SDDM {
-    int findUnused(int minimum, std::function<bool(const int)> used) {
-        // initialize with minimum
-        int number = minimum;
-
-        // find unused
-        while (used(number))
-            number++;
-
-        // return number;
-        return number;
-    }
-
     Seat::Seat(const QString &name, QObject *parent) : QObject(parent), m_name(name) {
         createDisplay();
     }
@@ -53,30 +41,13 @@
         return m_name;
     }
 
-    void Seat::createDisplay(int terminalId) {
+    void Seat::createDisplay() {
         //reload config if needed
         mainConfig.load();
 
-        if (m_name == QLatin1String("seat0")) {
-            if (terminalId == -1) {
-                // find unused terminal
-                terminalId = findUnused(mainConfig.X11.MinimumVT.get(), [&](const int number) {
-                    return m_terminalIds.contains(number);
-                });
-            }
-
-            // mark terminal as used
-            m_terminalIds << terminalId;
-
-            // log message
-            qDebug() << "Adding new display" << "on vt" << terminalId << "...";
-        }
-        else {
-            qDebug() << "Adding new VT-less display...";
-        }
-
         // create a new display
-        Display *display = new Display(terminalId, this);
+        qDebug() << "Adding new display...";
+        Display *display = new Display(this);
 
         // restart display on stop
         connect(display, &Display::stopped, this, &Seat::displayStopped);
@@ -112,9 +83,6 @@
         // remove display from list
         m_displays.removeAll(display);
 
-        // mark display and terminal ids as unused
-        m_terminalIds.removeAll(display->terminalId());
-
         // stop the display
         display->blockSignals(true);
         display->stop();
diff -Naur a/src/daemon/Seat.h b/src/daemon/Seat.h
--- a/src/daemon/Seat.h	2021-10-06 15:28:41.142851241 +0000
+++ b/src/daemon/Seat.h	2021-10-06 15:36:47.330631937 +0000
@@ -35,7 +35,7 @@
         const QString &name() const;
 
     public slots:
-        void createDisplay(int terminalId = -1);
+        void createDisplay();
         void removeDisplay(SDDM::Display* display);
 
     private slots:
@@ -47,7 +47,6 @@
         QString m_name;
 
         QVector<Display *> m_displays;
-        QVector<int> m_terminalIds;
     };
 }
 
--
2.33.0
